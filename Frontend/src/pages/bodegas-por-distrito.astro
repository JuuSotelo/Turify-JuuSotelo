---
import MainLayout from '../layouts/MainLayout.astro';
import FiltroPorUbicacion from '../components/FiltroPorUbicacion.jsx';
import GridCardReact from '../components/GridCardReact.jsx';
---

<MainLayout title="Bodegas de San Rafael">
  <main>
    <div class="hero-section">
      <h1>Bodegas de San Rafael</h1>
      <p>Descubre las mejores bodegas por distrito y vive la experiencia del vino en San Rafael.</p>
    </div>
    
    <div class="contenido-categoria">
      <div class="filtro-lateral">
        <FiltroPorUbicacion 
          titulo="Filtrar por distrito"
          client:load
          id="filtro-ubicaciones-bodegas"
        />
      </div>
      
      <div class="listado-lugares">
        <div id="resultados-bodegas" class="grid-container">
          <!-- Aqu칤 se cargar치n din치micamente las bodegas -->
          <div class="cargando">Cargando bodegas...</div>
        </div>
      </div>
    </div>
  </main>
</MainLayout>

<script>
  // Script para manejar la carga y filtrado de bodegas
  document.addEventListener('DOMContentLoaded', () => {
    const filtroUbicaciones = document.getElementById('filtro-ubicaciones-bodegas');
    const resultadosContainer = document.getElementById('resultados-bodegas');
    
    // Almacenamos todas las bodegas cargadas
    let todasLasBodegas = [];
    
    // Funci칩n para cargar las bodegas desde la API
    const cargarBodegas = async () => {
      try {
        // Usamos el endpoint de b칰squeda con filtro por tipo = Bodega
        const response = await fetch('http://localhost:3000/api/busqueda?entidad=empresas&tipo=Bodega');
        if (!response.ok) throw new Error('Error al cargar bodegas');
        
        const data = await response.json();
        todasLasBodegas = data.empresas || [];
        
        // Si no hay bodegas, mostramos un mensaje
        if (todasLasBodegas.length === 0) {
          resultadosContainer.innerHTML = `
            <div class="sin-resultados">
              <p>No se encontraron bodegas en la base de datos.</p>
            </div>
          `;
          return;
        }
        
        // Mostramos todas las bodegas inicialmente
        mostrarBodegas(todasLasBodegas);
        
      } catch (error) {
        console.error('Error al cargar bodegas:', error);
        resultadosContainer.innerHTML = `
          <div class="error">
            <p>Error al cargar las bodegas. Por favor intenta nuevamente.</p>
          </div>
        `;
      }
    };
    
    // Funci칩n para mostrar bodegas en el contenedor
    const mostrarBodegas = (bodegas) => {
      if (bodegas.length === 0) {
        resultadosContainer.innerHTML = `
          <div class="sin-resultados">
            <p>No se encontraron bodegas en los distritos seleccionados.</p>
          </div>
        `;
        return;
      }
      
      // Generar el HTML para cada bodega
      resultadosContainer.innerHTML = bodegas.map(bodega => `
        <div class="card">
          <div class="card-imagen">
            <div class="imagen-placeholder"><span>游꼖</span></div>
          </div>
          <div class="card-content">
            <h3>${bodega.nombre}</h3>
            <p class="direccion">${bodega.direccion}</p>
            <p>${bodega.descripcion ? bodega.descripcion.substring(0, 100) + (bodega.descripcion.length > 100 ? '...' : '') : 'Sin descripci칩n disponible'}</p>
            <div class="card-footer">
              <button class="btn-detalle">Ver detalles</button>
              ${bodega.sitio_web ? `<a href="${bodega.sitio_web}" target="_blank" class="btn-web">Visitar sitio web</a>` : ''}
            </div>
          </div>
        </div>
      `).join('');
    };
    
    // Funci칩n para filtrar bodegas por ubicaciones
    const filtrarBodegasPorUbicacion = (ubicaciones) => {
      // Si no hay ubicaciones seleccionadas, mostramos todas
      if (!ubicaciones || ubicaciones.length === 0) {
        mostrarBodegas(todasLasBodegas);
        return;
      }
      
      // Filtramos solo las bodegas que est치n en las ubicaciones seleccionadas
      const bodegasFiltradas = todasLasBodegas.filter(bodega => 
        ubicaciones.includes(bodega.direccion)
      );
      
      mostrarBodegas(bodegasFiltradas);
    };
    
    // Escuchar el evento de cambio en las ubicaciones seleccionadas
    if (filtroUbicaciones) {
      filtroUbicaciones.addEventListener('cambioUbicaciones', (event) => {
        const ubicacionesSeleccionadas = event.detail || [];
        filtrarBodegasPorUbicacion(ubicacionesSeleccionadas);
      });
    }
    
    // Cargar las bodegas al iniciar la p치gina
    cargarBodegas();
  });
</script>

<style>
  .hero-section {
    background-color: rgba(119, 201, 115, 0.15);
    padding: 3rem 1rem;
    text-align: center;
    margin-bottom: 2rem;
  }
  
  h1 {
    color: #1A513B;
    font-family: 'Montserrat', sans-serif;
    font-size: 2.2rem;
    margin-bottom: 1rem;
  }
  
  .hero-section p {
    max-width: 700px;
    margin: 0 auto;
    color: #555;
    font-size: 1.1rem;
  }
  
  .contenido-categoria {
    display: grid;
    grid-template-columns: 250px 1fr;
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem 3rem;
  }
  
  .filtro-lateral {
    position: sticky;
    top: 2rem;
    align-self: start;
  }
  
  .cargando, .sin-resultados, .error {
    grid-column: 1 / -1;
    padding: 2rem;
    text-align: center;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
  
  .error {
    color: #c04545;
    background-color: rgba(192, 69, 69, 0.1);
  }
  
  .card-footer {
    display: flex;
    gap: 0.75rem;
    margin-top: 1rem;
    flex-wrap: wrap;
  }
  
  .btn-detalle, .btn-web {
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.9rem;
    transition: all 0.2s;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
  }
  
  .btn-detalle {
    background-color: #1A513B;
    color: white;
    border: none;
  }
  
  .btn-web {
    background-color: transparent;
    color: #1A513B;
    border: 1px solid #1A513B;
  }
  
  .btn-detalle:hover {
    background-color: #143c2b;
  }
  
  .btn-web:hover {
    background-color: rgba(26, 81, 59, 0.1);
  }
  
  @media (max-width: 768px) {
    .contenido-categoria {
      grid-template-columns: 1fr;
    }
    
    .filtro-lateral {
      position: static;
      margin-bottom: 1.5rem;
    }
    
    .hero-section {
      padding: 2rem 1rem;
    }
  }
</style>
